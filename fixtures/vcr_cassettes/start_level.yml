---
http_interactions:
- request:
    method: post
    uri: https://api.stockfighter.io/gm/levels/first_steps
    body:
      encoding: UTF-8
      string: ''
    headers:
      X-Starfighter-Authorization:
      - fakeKey
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.8.0
      Date:
      - Sun, 13 Dec 2015 06:39:25 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      X-Upstream-Debugging:
      - 172.31.145.172:8181
    body:
      encoding: UTF-8
      string: |-
        {
          "ok": true,
          "instanceId": 207,
          "account": "RMB25037793",
          "instructions": {
            "Instructions": "# Welcome to Your New Job\n\n**These instructions are always available under the Instructions tab if you need to see them again.** \n\nCongrats on being employed at RockMethod Bank.  We're sure you'll **love** it here.  You have been granted\ncontrol over **account RMB25037793** and have full authority to conduct trades on it... subject to the not-so-watchful\neye of our risk management desk, naturally.\n\nFirst order of business: This is a blotter interface.  It connects your terminal to EFEY Johannesburg Exchange (*EEJEX*), a \nwell-regarded stock exchange.  We've pre-loaded it to track your first assignment, the shares of OceanBrain Corp. \n(*OBC*).\n\n## Your Goal\n* Get acquainted with this interface.\n* Watch the market participants trade a bit.\n* When you're ready, purchase 100 shares.  (Try using a market order.  Not sure about what that means? Read about Order Types in the instructions menu.)\n\n## You'll Be Fired If\n\n* The risk management desk is at an offsite today.  Parachuting into a volcano, apparently.  No rules until Monday!",
            "Order Types": "Stock exchanges give people placing orders limited control over the execution of those orders, in particular, under what\ncircumstances the order \"rests on\" (goes into) the order book.  \n\nThe *order book* is the data structure that makes a stock exchange a stock exchange: it is two queues, ordered by priority, of\nall offers to buy a stock (\"bids\" -- remember, **b** is for **b**uy) and offers to sell a stock (\"asks\").  In Stockfighter, most exchanges\nimplement price-time priority -- a \"better\" price always gets matched before a worse price, with ties getting broken by timestamp\nof the order.\n\nConcrete example: The order book contains 3 asks: 2 @ $98, 3 @ $100 (placed 5 minutes ago), and 5 @ $100 (placed 4 minutes ago). \nAn order comes in: **limit buy 8 @ $105.**  \n\nThis order matches:\n1.  2 @ $98.  The order still has 6 shares unsatisfied, so it continues.\n2.  3 @ $100.  We match the order for 3, not the order for 5, because the order for 3 is older.  The order still has 3 shares unsatisfied, so it continues.\n3.  3 @ $100.  This fully satisfies the incoming order.  The resting ask for 5 now has only 2 shares left remaining.\n\nAn execution notice (\"Hey, one of your orders just got a fill\") is sent to the party sending in the order and the three parties which\nplaced each of the resting orders.  (In Stockfighter, for convenience, we also return the executions in the HTTP response to the\nAPI call placing the order.  This affordance is unlikely in the real world.) \n\nNote that, despite the fact that the buyer was willing to pay up to $105 per share, they actually got 8 shares for $790 ($98.75 each).\nBuyers sometimes pay less than they expected to.  Sellers sometimes get more than they expected for their shares.  The reverse never happens.\n\n* **Limit orders** (in API, \"limit\"): The most common order type, which works as specified above.\n* **Market orders** (in API, \"market\"): An order type you should *never use for any reason*, most especially not because you're a retail trader or an evil level designer suggested you try it.  A market order doesn't specify a price -- it just continues matching orders until it is filled or it has exhausted one side of the order book.  It never rests on the order book.  Market orders *routinely* blow up in the face of people placing them, because what happens when you do a market order for 10 shares against a book which has 9 @ $10 and 1 @ $12,000?  Yep, you pay $12,090.  *Never ever ever use market orders.*\n* **Fill-or-Kill orders** (in API, \"fill-or-kill\"): Fill-or-kill (FOK) orders let you specify a limit price, like a limit order, but never rest on the book.  Also, they're all-or-nothing (AON, in Wall Street parlance).  Normally, if you place an order for 10 shares and the market can only give you 8, you get 8.  With a FOK order, you get 0 (and the order gets immediately canceled). \n* **Immediate-or-cancel orders** (in API, \"immediate-or-cancel\"): Like FOK in that the order executes instantly and never rests on the book, but it isn't all-or-nothing.  If you can only get 8 shares out of the 10 you wanted, you'll get the 8 shares.\n"
          },
          "tickers": [
            "OBC"
          ],
          "venues": [
            "EEJEX"
          ],
          "secondsPerTradingDay": 5
        }
    http_version: 
  recorded_at: Sun, 13 Dec 2015 06:39:21 GMT
recorded_with: VCR 3.0.0
